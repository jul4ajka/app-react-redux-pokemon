{"version":3,"sources":["images/pickachu.jpg","components/UI/Header/Header.js","configs/index.js","containers/MainPage/MainPage.js","components/Item/Types/Types.js","components/Item/Item.js","components/Pokemon/Pokemon.js","components/Options/Options.js","components/UI/Loader/Loader.js","store/actions/pokemons.js","store/actions/actionTypes.js","store/actions/showItem.js","store/actions/filterItems.js","containers/PokemonsPage/PokemonsPage.js","store/actions/getAllTypes.js","containers/ContactsPage/ContactPage.js","routes/routes.js","components/UI/Navigation/Navigation.js","App.js","serviceWorker.js","store/reducers/pokemons.js","store/reducers/showItem.js","store/reducers/getAllTypes.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","Header","className","MAIN_PAGE_IMAGE","main","imgPokemon","MainPage","src","alt","Component","Types","this","props","type","Item","img","name","types","map","index","key","Pokemon","image","attack","deffence","hp","sp_attack","sp_deffence","speed","weight","total_moves","Options","Fragment","Loader","fetchPokemonsSuccess","nextArr","pokemonsResults","pokemonsArr","showItemSuccess","pokemon","showPokemon","filterItemsSuccess","filter","filterItemsError","e","error","PokemonsPage","fetchPokemons","initialArr","getAllTypes","showItem","onChange","event","filterItems","allTypes","loading","item","onClick","url","pokemonInfo","sprites","front_default","length","Math","random","toFixed","connect","state","pokemons","dispatch","a","fetch","response","json","next","i","results","value","target","store","getState","pokemonsCopy","toLowerCase","ContactPage","Routes","path","exact","component","ContactsPage","Navigation","to","App","Boolean","window","location","hostname","match","initialState","filtered","combineReducers","action","concat","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.93bb6518.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pickachu.30a4b88c.jpg\";","import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"Header\">\r\n      <div className=\"Header_title\">Pokedex</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import imgPokemon from '../images/pickachu.jpg'\r\n\r\nexport const MAIN_PAGE_IMAGE = {\r\n  main: imgPokemon,\r\n}\r\n","import React, { Component } from 'react'\r\nimport './MainPage.css'\r\nimport { MAIN_PAGE_IMAGE } from '../../configs/index'\r\n\r\nclass MainPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className='MainPage'>\r\n        <h1>Pokemons App</h1>\r\n        <img\r\n          src={MAIN_PAGE_IMAGE.main}\r\n          alt='pokemons'\r\n          className='MainPokemon'\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MainPage\r\n","import React, {Component} from 'react';\r\nimport './Types.css';\r\n\r\n\r\nclass Types extends Component {\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className=\"Types\">\r\n\t\t\t\t{ this.props.type === \"grass\" ? \r\n\t\t\t\t<span className={\"Types_item_grass\"}>{this.props.type}</span> \r\n\t\t\t\t: this.props.type === \"poison\" ? \r\n\t\t\t\t<span className=\"Types_item_poison\">{this.props.type}</span>\r\n\t\t\t\t: this.props.type === \"fire\" ?\r\n\t\t\t\t<span className=\"Types_item_fire\">{this.props.type}</span>\r\n\t\t\t\t: this.props.type === \"normal\" ?\r\n\t\t\t\t<span className=\"Types_item_normal\">{this.props.type}</span> \r\n\t\t\t\t: this.props.type === \"fighting\" ?\r\n\t\t\t\t<span className=\"Types_item_fighting\">{this.props.type}</span>\r\n\t\t\t\t: this.props.type === \"flying\" ?\r\n\t\t\t\t<span className=\"Types_item_flying\">{this.props.type}</span>\r\n\t\t\t\t: this.props.type === \"ground\" ? \r\n\t\t\t\t<span className=\"Types_item_ground\">{this.props.type}</span>\r\n\t\t\t\t: this.props.type === \"rock\" ?\r\n\t\t\t\t<span className=\"Types_item_rock\">{this.props.type}</span> \r\n\t\t\t\t: this.props.type === \"bug\" ? \r\n\t\t\t\t<span className=\"Types_item_bug\">{this.props.type}</span>\r\n\t\t\t\t: this.props.type === \"ghost\" ?\r\n\t\t\t\t<span className=\"Types_item_ghost\">{this.props.type}</span>\r\n\t\t\t\t: this.props.type === \"steel\" ?\r\n\t\t\t\t<span className=\"Types_item_steel\">{this.props.type}</span>\r\n\t\t\t\t: <span className=\"Types_item_default\">{this.props.type}</span>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t) \r\n\t}\r\n}\r\n\r\nexport default Types;","import React from 'react';\r\nimport './Item.css';\r\nimport Types from './Types/Types'\r\n\r\nfunction Item (props) {\r\n\treturn (\r\n\t\t<div className=\"Item\">\r\n\t\t\t\t<img className=\"Item_img\" src={props.img} alt=\"pokemon\"/>\r\n\t\t\t\t<p className=\"Item_name\">{props.name}</p>\r\n\t\t\t\t<div className=\"Type_wrapper\"> \r\n\t\t\t\t\t\t{props.types ? \r\n\t\t\t\t\t\t\t\t\t\tprops.types.map((type, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Types key={index} type={type.type.name}  />\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}): null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\nimport './Pokemon.css';\r\n\r\n\r\nfunction Pokemon (props) {\r\n\treturn(\r\n\t\t<div className=\"Pokemon\">\r\n\t\t\t\t<img className=\"Pokemon_image\" src={props.image} alt=\"pokemon\"/>\r\n\t\t\t\t<div>\r\n\t\t\t\t<table className=\"Pokemon_table\">\r\n\t\t\t\t\t<thead></thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Types</td>\r\n\t\t\t\t\t\t<td>{props.types}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Attack</td>\r\n\t\t\t\t\t\t<td>{props.attack}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Deffence</td>\r\n\t\t\t\t\t\t<td>{props.deffence}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>HP</td>\r\n\t\t\t\t\t\t<td>{props.hp}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>SP Attack</td>\r\n\t\t\t\t\t\t<td>{props.sp_attack}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>SP Deffence</td>\r\n\t\t\t\t\t\t<td>{props.sp_deffence}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Speed</td>\r\n\t\t\t\t\t\t<td>{props.speed}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Weight</td>\r\n\t\t\t\t\t\t<td>{props.weight}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>Total moves</td>\r\n\t\t\t\t\t\t<td>{props.total_moves}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t\t<tfoot></tfoot>\r\n\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Pokemon;","import React from 'react'\r\nimport './Options.css'\r\n\r\nfunction Options (props) {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n      <option className={'Options'}>{props.type}</option>\r\n    </React.Fragment>\r\n\t)\r\n}\r\n\r\nexport default Options","import React from 'react'\r\nimport './Loader.css'\r\n\r\nconst Loader = props => (\r\n  <div className={'Loader'}>\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n  </div>\r\n)\r\n\r\nexport default Loader\r\n","import {\r\n  FETCH_POKEMONS_START,\r\n  FETCH_POKEMONS_SUCCESS,\r\n  FETCH_POKEMONS_ERROR,\r\n} from '../actions/actionTypes'\r\n\r\nexport default function fetchPokemons(url) {\r\n  return async dispatch => {\r\n    dispatch(fetchPokemonsStart())\r\n    try {\r\n      let response = await fetch(url)\r\n      let pokemons = await response.json()\r\n      const nextArr = pokemons.next\r\n\r\n      for (let i = 0; i < pokemons.results.length; i++) {\r\n        let response = await fetch(pokemons.results[i].url)\r\n        let sprites = await response.json()\r\n\r\n        pokemons.results[i].image = sprites.sprites.front_default\r\n        pokemons.results[i].types = sprites.types\r\n      }\r\n      dispatch(fetchPokemonsSuccess(nextArr, pokemons.results))\r\n    } catch (e) {\r\n      dispatch(fetchPokemonsError(e))\r\n    }\r\n  }\r\n}\r\n\r\nexport function fetchPokemonsStart() {\r\n  return {\r\n    type: FETCH_POKEMONS_START,\r\n  }\r\n}\r\n\r\nexport function fetchPokemonsSuccess(nextArr, pokemonsResults) {\r\n  return {\r\n    type: FETCH_POKEMONS_SUCCESS,\r\n    nextArr: nextArr,\r\n    pokemonsArr: pokemonsResults,\r\n  }\r\n}\r\n\r\nexport function fetchPokemonsError(e) {\r\n  return {\r\n    type: FETCH_POKEMONS_ERROR,\r\n    error: e,\r\n  }\r\n}\r\n","export const FETCH_POKEMONS_START = 'FETCH_POKEMONS_START'\r\nexport const FETCH_POKEMONS_SUCCESS = 'FETCH_POKEMONS_SUCCESS'\r\nexport const FETCH_POKEMONS_ERROR = 'FETCH_POKEMONS_ERROR'\r\n\r\nexport const SHOW_ITEM_START = 'SHOW_ITEM_START'\r\nexport const SHOW_ITEM_SUCCESS = 'SHOW_ITEM_SUCCESS'\r\nexport const SHOW_ITEM_ERROR = 'SHOW_ITEM_ERROR'\r\n\r\nexport const FILTER_ITEM_SUCCESS = 'FILTER_ITEM_SUCCESS'\r\nexport const FILTER_ITEM_ERROR = 'FILTER_ITEM_ERROR'\r\n\r\nexport const GET_TYPES_START = 'GET_TYPES_START'\r\nexport const GET_TYPES_SUCCESS = 'GET_TYPES_SUCCESS'\r\nexport const GET_TYPES_ERROR = 'GET_TYPES_ERROR'\r\n","import {\r\n  SHOW_ITEM_START,\r\n  SHOW_ITEM_SUCCESS,\r\n  SHOW_ITEM_ERROR,\r\n} from '../actions/actionTypes'\r\n\r\nexport default function showItem(url) {\r\n  return async dispatch => {\r\n    dispatch(showItemStart())\r\n    try {\r\n      let response = await fetch(url)\r\n      let pokemon = await response.json()\r\n      let showPokemon = true\r\n      dispatch(showItemSuccess(pokemon, showPokemon))\r\n    } catch (e) {\r\n      dispatch(showItemError(e))\r\n    }\r\n  }\r\n}\r\n\r\nexport function showItemStart() {\r\n  return {\r\n    type: SHOW_ITEM_START,\r\n  }\r\n}\r\n\r\nexport function showItemSuccess(pokemon, showPokemon) {\r\n  return {\r\n    type: SHOW_ITEM_SUCCESS,\r\n    pokemon: pokemon,\r\n    showPokemon: showPokemon,\r\n  }\r\n}\r\n\r\nexport function showItemError(e) {\r\n  return {\r\n    type: SHOW_ITEM_ERROR,\r\n    error: e,\r\n  }\r\n}\r\n","import { FILTER_ITEM_SUCCESS, FILTER_ITEM_ERROR } from '../actions/actionTypes'\r\nimport { store } from '../../index'\r\n\r\nexport default function filterItems(event) {\r\n  return async dispatch => {\r\n    try {\r\n      let value = event.target.value\r\n\r\n      if (value === 'Select all') {\r\n        let filter = store.getState().pokemons.pokemonsCopy\r\n        dispatch(filterItemsSuccess(filter))\r\n      } else {\r\n        let filter = store\r\n          .getState()\r\n          .pokemons.pokemonsCopy.filter(pokemon =>\r\n            pokemon.types.length === 1\r\n              ? pokemon.types[0].type.name === value.toLowerCase()\r\n              : pokemon.types[0].type.name === value.toLowerCase() ||\r\n                pokemon.types[1].type.name === value.toLowerCase()\r\n          )\r\n        dispatch(filterItemsSuccess(filter))\r\n      }\r\n    } catch (e) {\r\n      dispatch(filterItemsError(e))\r\n    }\r\n  }\r\n}\r\n\r\nexport function filterItemsSuccess(filter) {\r\n  return {\r\n    type: FILTER_ITEM_SUCCESS,\r\n    filter,\r\n  }\r\n}\r\n\r\nexport function filterItemsError(e) {\r\n  return {\r\n    type: FILTER_ITEM_ERROR,\r\n    error: e,\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './PokemonsPage.css'\r\nimport Item from '../../components/Item/Item'\r\nimport Pokemon from '../../components/Pokemon/Pokemon'\r\nimport Options from '../../components/Options/Options'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport { connect } from 'react-redux'\r\nimport fetchPokemons from '../../store/actions/pokemons'\r\nimport showItem from '../../store/actions/showItem'\r\nimport getAllTypes from '../../store/actions/getAllTypes'\r\nimport filterItems from '../../store/actions/filterItems'\r\n\r\nclass PokemonsPage extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchPokemons(this.props.initialArr)\r\n    this.props.getAllTypes()\r\n  }\r\n\r\n  render() {\r\n    const { fetchPokemons, showItem } = this.props\r\n    return (\r\n      <div className='PokemonsPage'>\r\n        <select\r\n          onChange={event => this.props.filterItems(event)}\r\n          className={'SelectPokemonsType'}\r\n        >\r\n          <option>Select all</option>\r\n          {this.props.allTypes.map((type, index) => {\r\n            return <Options type={type.name} key={index} />\r\n          })}\r\n        </select>\r\n        <div className='Section_wrapper'>\r\n          <div className='Item_wrapper'>\r\n            {this.props.loading ? (\r\n              <Loader />\r\n            ) : (\r\n              this.props.pokemonsArr.map((item, index) => {\r\n                return (\r\n                  <div\r\n                    onClick={() => {\r\n                      showItem(item.url)\r\n                    }}\r\n                    key={index}\r\n                  >\r\n                    <Item\r\n                      name={item.name}\r\n                      img={item.image}\r\n                      types={item.types}\r\n                    />\r\n                  </div>\r\n                )\r\n              })\r\n            )}\r\n            <button\r\n              className='Load_more'\r\n              onClick={() => {\r\n                fetchPokemons(this.props.nextArr)\r\n              }}\r\n            >\r\n              Load more\r\n            </button>\r\n          </div>\r\n          <div className='Pokemon_wrapper'>\r\n            {this.props.showPokemon ? (\r\n              <Pokemon\r\n                image={this.props.pokemonInfo.sprites.front_default}\r\n                types={\r\n                  this.props.pokemonInfo.types.length === 1\r\n                    ? this.props.pokemonInfo.types[0].type.name\r\n                    : this.props.pokemonInfo.types[0].type.name +\r\n                      ' ' +\r\n                      this.props.pokemonInfo.types[1].type.name\r\n                }\r\n                attack={(Math.random() * 100).toFixed(0)}\r\n                deffence={(Math.random() * 100).toFixed(0)}\r\n                hp={(Math.random() * 100).toFixed(0)}\r\n                sp_attack={(Math.random() * 100).toFixed(0)}\r\n                sp_deffence={(Math.random() * 100).toFixed(0)}\r\n                speed={(Math.random() * 100).toFixed(0)}\r\n                weight={(Math.random() * 100).toFixed(0)}\r\n                total_moves={(Math.random() * 100).toFixed(0)}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    pokemonsArr: state.pokemons.pokemonsArr,\r\n    initialArr: state.pokemons.initialArr,\r\n    nextArr: state.pokemons.nextArr,\r\n    pokemonInfo: state.showItem.pokemonInfo,\r\n    showPokemon: state.showItem.showPokemon,\r\n    allTypes: state.getAllTypes.allTypes,\r\n    loading: state.pokemons.loading,\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchPokemons: url => dispatch(fetchPokemons(url)),\r\n    showItem: url => dispatch(showItem(url)),\r\n    getAllTypes: () => dispatch(getAllTypes()),\r\n    filterItems: event => dispatch(filterItems(event)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonsPage)\r\n","import {\r\n  GET_TYPES_START,\r\n  GET_TYPES_SUCCESS,\r\n  GET_TYPES_ERROR,\r\n} from '../actions/actionTypes'\r\n\r\nexport default function getAllTypes() {\r\n  return async dispatch => {\r\n    dispatch(getAllTypesStart())\r\n    try {\r\n      let response = await fetch('https://pokeapi.co/api/v2/type/?limit=999')\r\n      let types = await response.json()\r\n\r\n      dispatch(getAllTypesSuccess(types.results))\r\n    } catch (e) {\r\n      dispatch(getAllTypesError(e))\r\n    }\r\n  }\r\n}\r\n\r\nexport function getAllTypesStart() {\r\n  return {\r\n    type: GET_TYPES_START,\r\n  }\r\n}\r\n\r\nexport function getAllTypesSuccess(allTypes) {\r\n  return {\r\n    type: GET_TYPES_SUCCESS,\r\n    allTypes: allTypes,\r\n  }\r\n}\r\n\r\nexport function getAllTypesError(e) {\r\n  return {\r\n    type: GET_TYPES_ERROR,\r\n    error: e,\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './ContactPage.css'\r\n\r\nclass ContactPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className={'ContactPage'}>\r\n        <h1>ContactPage</h1>\r\n        <p>Juls Birdy, 2020</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactPage\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\nimport MainPage from '../containers/MainPage/MainPage'\r\nimport PokemonsPage from '../containers/PokemonsPage/PokemonsPage'\r\nimport ContactsPage from '../containers/ContactsPage/ContactPage'\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route path='/' exact component={MainPage} />\r\n        <Route path='/pokemons' component={PokemonsPage} />\r\n        <Route path='/contacts' component={ContactsPage} />\r\n      </Switch>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport './Navigation.css'\r\nimport Routes from '../../../routes/routes'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <div>\r\n      <div className={'Navigation'}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to='/' exact>\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to='/pokemons'>Pokemons</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to='/contacts'>Contacts</NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <Routes />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","import React, { Component } from 'react'\nimport './App.css'\nimport Header from './components/UI/Header/Header'\nimport Navigation from './components/UI/Navigation/Navigation'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <header className='Header_wraper'>\n          <Header />\n        </header>\n        <Navigation />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  FETCH_POKEMONS_ERROR,\r\n  FETCH_POKEMONS_START,\r\n  FETCH_POKEMONS_SUCCESS,\r\n} from '../actions/actionTypes'\r\n\r\nimport { FILTER_ITEM_SUCCESS, FILTER_ITEM_ERROR } from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  pokemonsArr: [],\r\n  pokemonsCopy: [],\r\n  initialArr: 'https://pokeapi.co/api/v2/pokemon?limit=12',\r\n  pokemonInfo: {},\r\n  showPokemon: false,\r\n  allTypes: [],\r\n  loading: true,\r\n}\r\n\r\nexport default function pokemonsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_POKEMONS_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case FETCH_POKEMONS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        nextArr: action.nextArr,\r\n        loading: false,\r\n        pokemonsArr:\r\n          action.pokemonsArr || state.pokemonsCopy.concat(action.pokemonsArr),\r\n        pokemonsCopy: state.pokemonsCopy.concat(action.pokemonsArr),\r\n      }\r\n    case FETCH_POKEMONS_ERROR:\r\n      return { ...state, loading: false, error: action.e }\r\n    case FILTER_ITEM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pokemonsArr: action.filter,\r\n      }\r\n    case FILTER_ITEM_ERROR:\r\n      return { ...state, error: action.e }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  SHOW_ITEM_ERROR,\r\n  SHOW_ITEM_START,\r\n  SHOW_ITEM_SUCCESS,\r\n} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  pokemonsArr: [],\r\n  initialArr: 'https://pokeapi.co/api/v2/pokemon?limit=12',\r\n  pokemonInfo: {},\r\n  showPokemon: false,\r\n  filtered: [],\r\n  allTypes: [],\r\n  loading: true,\r\n}\r\n\r\nexport default function showItemReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SHOW_ITEM_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case SHOW_ITEM_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pokemonInfo: action.pokemon,\r\n        showPokemon: action.showPokemon,\r\n      }\r\n    case SHOW_ITEM_ERROR:\r\n      return { ...state, loading: false, error: action.e }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  GET_TYPES_START,\r\n  GET_TYPES_SUCCESS,\r\n  GET_TYPES_ERROR,\r\n} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n  allTypes: [],\r\n}\r\n\r\nexport default function getAllTypesReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_TYPES_START:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case GET_TYPES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allTypes: action.allTypes,\r\n      }\r\n    case GET_TYPES_ERROR:\r\n      return { ...state, error: action.e }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport pokemonsReducer from './pokemons'\r\nimport showItemReducer from './showItem'\r\nimport getAllTypesReducer from './getAllTypes'\r\n\r\nexport default combineReducers({\r\n  pokemons: pokemonsReducer,\r\n  showItem: showItemReducer,\r\n  getAllTypes: getAllTypesReducer,\r\n})\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter } from 'react-router-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport thunk from 'redux-thunk'\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}